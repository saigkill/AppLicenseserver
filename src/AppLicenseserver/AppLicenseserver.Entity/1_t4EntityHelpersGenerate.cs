// <copyright file="1_t4EntityHelpersGenerate.cs" company="marcos software">
// This file may not be redistributed in whole or significant part
// and is subject to the marcos software license.
//
// @author: Sascha Manns, s.manns@marcossoftware.com
// @copyright: 2022, marcos-software, http://www.marcos-software.de
// </copyright>


// —————————————— 
// <auto-generated> 
//	This code was auto-generated 07/18/2022 12:21:29
//     	T4 template generates dbcontext context and concurrency code
//	NOTE:T4 generated code may need additional updates/addjustments by developer in order to compile a solution.
// <auto-generated> 
// —————————————–

using System;
using System.Threading.Tasks;
using System.Linq;
using System.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
namespace AppLicenseserver.Entity.Context
{
	public partial class DefaultDbContext : DbContext
	{

		public DbSet<License> Licenses { get; set; }

		public DbSet<Product> Products { get; set; }

		public DbSet<Telemetry> Telemetrys { get; set; }

		/// Add new entities concurrency declarations (Fluent API)
		partial void SetAdditionalConcurency(ModelBuilder modelBuilder)
		{
			modelBuilder.Entity<License>().Property(a => a.RowVersion).IsRowVersion();
			modelBuilder.Entity<Product>().Property(a => a.RowVersion).IsRowVersion();
			modelBuilder.Entity<Telemetry>().Property(a => a.RowVersion).IsRowVersion();

		}
	}
}

